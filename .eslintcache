[{"/Users/xuting/workspace/czl/qr/src/App.tsx":"1","/Users/xuting/workspace/czl/qr/src/reportWebVitals.ts":"2"},{"size":3520,"mtime":1613893400553,"results":"3","hashOfConfig":"4"},{"size":425,"mtime":1612345704344,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"8"},"p53su7",{"filePath":"9","messages":"10","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/xuting/workspace/czl/qr/src/App.tsx",["11"],"import React, {useState} from 'react';\nimport './App.css';\nimport {Button, ConfigProvider} from 'antd';\n\nimport zhCN from 'antd/es/locale/zh_CN';\nimport 'antd/dist/antd.css';\nimport { Input, Upload } from 'antd';\nimport ImgCrop from 'antd-img-crop';\n\nconst { TextArea } = Input;\n\nconst QRCode = require('qrcode');\n\nconst WIDTH = 200;\n\nfunction App() {\n\n  const [ text, setText ] = useState<string>('陈志磊\\n张树华\\n陈世超');\n  const [ showQrCode, setShowQrCode ] = useState(false);\n  const [ bgBase64, setBgBase64 ] = useState<string>('');\n\n  const getTextUrls = () => {\n    if (!text) return [];\n    return text.split('\\n');\n  };\n\n  const submit = () => {\n    const arr = getTextUrls();\n    if (arr.length > 0) {\n      setShowQrCode(true);\n      setTimeout(() => {\n        arr.forEach((text, index) => {\n          if (text) {\n            QRCode.toCanvas(document.getElementById(`${text}_${index}`), text, {\n              width: WIDTH,\n              margin: 0,\n            }, function (error: Error) {\n              if (error) console.error(error);\n            })\n          }\n        });\n      }, 1000);\n    } else {\n      setShowQrCode(false);\n    }\n  };\n\n  return (\n    <ConfigProvider locale={zhCN}>\n      <div className=\"App\">\n        <div className=\"left\">\n          <TextArea\n            placeholder='输入地址，换行分开'\n            value={text}\n            onChange={(params: { target: { value: string } }) => {\n              setText(params.target.value || '');\n            }}\n            style={{\n              height: 200,\n            }}\n          />\n          <Button\n            size='large'\n            type='primary'\n            onClick={submit}\n            style={{\n              width: 100,\n              marginTop: 20,\n              alignSelf: 'center',\n            }}\n          >提交</Button>\n          <div style={{marginTop: 40}}>\n            <ImgCrop rotate>\n              <Upload\n                beforeUpload={file => {\n                  // file 对象转 base64\n                  // 声明js的文件流\n                  const reader = new FileReader();\n                  if (file){\n                    // 通过文件流将文件转换成Base64字符串\n                    reader.readAsDataURL(file);\n                    // 转换成功事件函数\n                    reader.onloadend = () => {\n                      setBgBase64(reader.result as string);\n                    }\n                  }\n                  return false;\n                }}\n              >\n                <Button>选择背景图</Button>\n              </Upload>\n            </ImgCrop>\n          </div>\n        </div>\n        <div className=\"right\">\n          {showQrCode && getTextUrls().length > 0 && getTextUrls().map((text, index) => {\n            return text && (\n              <div\n                key={index}\n                style={{marginBottom: 40, position: \"relative\"}}\n              >\n                {bgBase64 && (\n                  <img\n                    src={bgBase64}\n                    style={{\n                      position: \"absolute\",\n                      width: WIDTH,\n                      height: WIDTH,\n                      objectFit: \"cover\",\n                    }}\n                  />\n                )}\n                <div style={{opacity: bgBase64 ? 0.6 : 1}}>\n                  <canvas id={`${text}_${index}`} />\n                </div>\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    </ConfigProvider>\n  );\n}\n\nexport default App;\n","/Users/xuting/workspace/czl/qr/src/reportWebVitals.ts",[],{"ruleId":"12","severity":1,"message":"13","line":103,"column":19,"nodeType":"14","endLine":111,"endColumn":21},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]