{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["TextArea","Input","QRCode","require","mouseDown","posX","posY","lastPageX","lastPageY","posX_T","posY_T","lastPageX_T","lastPageY_T","qrImgElementArr","qrTextElementArr","qrWidth","qrTextMap","timeoutId","App","useState","text","setText","showQrCode","setShowQrCode","bgBase64","setBgBase64","showText","setShowText","textColor","setTextColor","forceUpdate","useForceUpdate","getTextUrls","split","submit","arr","length","setTimeout","forEach","index","toCanvas","document","getElementById","width","margin","error","console","qrElId","querySelector","qrTextElId","onMouseDown","e","type","pageX","pageY","qrMove","Object","keys","key","el","style","left","top","useEffect","window","addEventListener","locale","zhCN","className","placeholder","value","onChange","params","target","height","size","onClick","marginTop","alignSelf","beforeUpload","file","reader","FileReader","readAsDataURL","onloadend","result","min","max","defaultValue","onAfterChange","display","map","item","marginRight","marginBottom","backgroundColor","cursor","position","src","id","zIndex","onMouseMove","fontSize","whiteSpace","color","clearTimeout","onTextChange","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.00ba078f.chunk.js","sourcesContent":["import React, {ChangeEvent, useEffect, useState} from 'react';\nimport './App.css';\nimport {Button, ConfigProvider, Slider} from 'antd';\n\nimport zhCN from 'antd/es/locale/zh_CN';\nimport 'antd/dist/antd.css';\nimport { Input, Upload } from 'antd';\nimport useForceUpdate from \"antd/es/_util/hooks/useForceUpdate\";\n\nconst { TextArea } = Input;\n\nconst QRCode = require('qrcode');\n\nlet mouseDown = false;\nlet posX = 0; let posY = 0; let lastPageX = 0; let lastPageY = 0;\nlet posX_T = 0; let posY_T = 0; let lastPageX_T = 0; let lastPageY_T = 0;\n\n// 存放 qr img element map <index, element>\nconst qrImgElementArr: any = {};\n// 存放 qr text element map <index, element>\nconst qrTextElementArr: any = {};\n\n// 二维码大小\nlet qrWidth = 80;\n\n// 背景图宽度\nconst bgWidth = 400;\n\n// 存放 qr 文字 map <index, text>\nconst qrTextMap: any = {};\n\nlet timeoutId = 0;\n\nfunction App() {\n\n  const [ text, setText ] = useState<string>('风急天高猿啸哀\\n渚清沙白鸟飞回');\n  const [ showQrCode, setShowQrCode ] = useState(false);\n  const [ bgBase64, setBgBase64 ] = useState<string>('');\n  const [ showText, setShowText ] = useState(false);\n  const [ textColor, setTextColor ] = useState('black');\n\n  const forceUpdate = useForceUpdate();\n\n  const getTextUrls = () => {\n    if (!text) return [];\n    return text.split('\\n');\n  };\n\n  const submit = () => {\n    const arr = getTextUrls();\n    if (arr.length > 0) {\n      setShowQrCode(true);\n      setTimeout(() => {\n        arr.forEach((text, index) => {\n          if (text) {\n            // 显示二维码\n            QRCode.toCanvas(document.getElementById(`${text}_${index}`), text, {\n              width: qrWidth,\n              margin: 2,\n            }, function (error: Error) {\n              if (error) console.error(error);\n            });\n            // 设置 ElementArr\n            const qrElId = `canvas_container_${index}`;\n            qrImgElementArr[index] = document.querySelector(`#${qrElId}`);\n            const qrTextElId = `qr_text_${index}`;\n            qrTextElementArr[index] = document.querySelector(`#${qrTextElId}`);\n          }\n        });\n      }, 500);\n    } else {\n      setShowQrCode(false);\n    }\n  };\n\n  const beforeUpload = (file: File) => {\n    // file 对象转 base64\n    // 声明js的文件流\n    const reader = new FileReader();\n    if (file){\n      // 通过文件流将文件转换成Base64字符串\n      reader.readAsDataURL(file);\n      // 转换成功事件函数\n      reader.onloadend = () => {\n        setBgBase64(reader.result as string);\n      }\n    }\n    return false;\n  };\n\n  const onMouseDown = (e: MouseEvent, type: 'img' | 'text') => {\n    mouseDown = true;\n    const {pageX, pageY} = e;\n    if (type === 'img') {\n      lastPageX = pageX;\n      lastPageY = pageY;\n    } else {\n      lastPageX_T = pageX;\n      lastPageY_T = pageY;\n    }\n  };\n\n  const qrMove = (e: MouseEvent, type: 'img' | 'text') => {\n    if (bgBase64 && mouseDown) {\n      const {pageX, pageY} = e;\n\n      if (type === 'img') {\n        let offsetX = pageX - lastPageX;\n        let offsetY = pageY - lastPageY;\n        posX += offsetX;\n        posY += offsetY;\n\n        Object.keys(qrImgElementArr).forEach(key => {\n          const el = qrImgElementArr[key];\n          if (el) {\n            el.style.left = `${posX}px`;\n            el.style.top = `${posY}px`;\n          }\n        });\n\n        lastPageX = pageX;\n        lastPageY = pageY;\n\n      } else if (type === 'text') {\n        let offsetX = pageX - lastPageX_T;\n        let offsetY = pageY - lastPageY_T;\n        posX_T += offsetX;\n        posY_T += offsetY;\n\n        Object.keys(qrTextElementArr).forEach(key => {\n          const el = qrTextElementArr[key];\n          if (el) {\n            el.style.left = `${posX_T}px`;\n            el.style.top = `${posY_T}px`;\n          }\n        });\n\n        lastPageX_T = pageX;\n        lastPageY_T = pageY;\n      }\n    }\n  };\n\n  const onTextChange = (value: string, index: number) => {\n    clearTimeout(timeoutId);\n    // @ts-ignore\n    timeoutId = setTimeout(() => {\n      qrTextMap[index] = value;\n      forceUpdate();\n    }, 500);\n  };\n\n  useEffect(() => {\n    window.addEventListener('mouseup', () => {\n      mouseDown = false;\n    });\n  }, []);\n\n  return (\n    <ConfigProvider locale={zhCN}>\n      <div className=\"App\">\n        <div className=\"left\">\n          <TextArea\n            placeholder='输入地址，换行分开'\n            value={text}\n            onChange={(params: { target: { value: string } }) => {\n              setText(params.target.value || '');\n            }}\n            style={{\n              height: 200,\n            }}\n          />\n          <Button\n            size='large'\n            type='primary'\n            onClick={submit}\n            style={{\n              marginTop: 20,\n              alignSelf: 'center',\n            }}\n          >生成二维码</Button>\n          {showQrCode && (\n            <div style={{marginTop: 40}}>\n              <Upload beforeUpload={beforeUpload}>\n                <Button>选择背景图</Button>\n              </Upload>\n            </div>\n          )}\n          {showQrCode && (\n            <div style={{marginTop: 40}}>\n              <span>调整二维码大小</span>\n              <Slider\n                min={60}\n                max={200}\n                defaultValue={qrWidth}\n                onAfterChange={(value: number) => {\n                  qrWidth = value;\n                  submit();\n                }}\n              />\n            </div>\n          )}\n          {bgBase64 && (\n            <div style={{marginTop: 40}}>\n              <Button\n                onClick={() => setShowText(true)}\n                style={{width: 100}}\n              >添加文字</Button>\n              {showText && (\n                <>\n                  <p style={{marginTop: 10}}>文字颜色</p>\n                  <div style={{display: \"flex\"}}>\n                    {['black', 'blue', 'orange', 'red'].map((item, index) => (\n                      <div\n                        key={index}\n                        style={{\n                          width: 40, height: 40,\n                          marginRight: 10, marginBottom: 10,\n                          backgroundColor: item,\n                          cursor: \"pointer\",\n                        }}\n                        onClick={() => setTextColor(item)}\n                      />\n                    ))}\n                  </div>\n                </>\n              )}\n            </div>\n          )}\n        </div>\n        <div className=\"right\">\n          {showQrCode && getTextUrls().length > 0 && getTextUrls().map((text, index) => {\n            return text && (\n              <div\n                key={index}\n                style={{\n                  marginBottom: 40,\n                  position: \"relative\",\n                }}\n              >\n                {bgBase64 && (\n                  <img\n                    src={bgBase64}\n                    style={{\n                      width: bgWidth,\n                    }}\n                  />\n                )}\n                <div\n                  id={`canvas_container_${index}`}\n                  style={{\n                    zIndex: 99,\n                    position: bgBase64 ? \"absolute\" : \"relative\",\n                    top: 0,\n                    left: 0,\n                    cursor: 'move',\n                  }}\n                  // @ts-ignore\n                  onMouseDown={e => onMouseDown(e, 'img')}\n                  // @ts-ignore\n                  onMouseMove={(e) => qrMove(e, 'img')}\n                >\n                  <canvas id={`${text}_${index}`} />\n                </div>\n                <span\n                  id={`qr_text_${index}`}\n                  style={{\n                    zIndex: 99,\n                    position: \"absolute\",\n                    top: 0,\n                    left: 0,\n                    fontSize: 18,\n                    whiteSpace: \"pre-wrap\",\n                    cursor: 'move',\n                    color: textColor,\n                  }}\n                  // @ts-ignore\n                  onMouseDown={e => onMouseDown(e, 'text')}\n                  // @ts-ignore\n                  onMouseMove={(e) => qrMove(e, 'text')}\n                >{qrTextMap[index] || ''}</span>\n                {showText && bgBase64 && (\n                  <TextArea\n                    style={{\n                      marginTop: 20,\n                      width: bgWidth,\n                      height: 120,\n                    }}\n                    placeholder={text}\n                    onChange={(e) => onTextChange(e.target.value, index)}\n                  />\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    </ConfigProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}